// Generated by view binder compiler. Do not edit!
package com.example.soalria.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.soalria.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final RecyclerView recyclerViewFood;

  @NonNull
  public final RecyclerView recyclerViewRate;

  @NonNull
  public final TextView textViewHome1;

  @NonNull
  public final TextView textViewHome2;

  @NonNull
  public final TextView textViewHome3;

  @NonNull
  public final TextView textViewHome4;

  @NonNull
  public final TextView textViewTop3;

  private FragmentHomeBinding(@NonNull NestedScrollView rootView,
      @NonNull RecyclerView recyclerViewFood, @NonNull RecyclerView recyclerViewRate,
      @NonNull TextView textViewHome1, @NonNull TextView textViewHome2,
      @NonNull TextView textViewHome3, @NonNull TextView textViewHome4,
      @NonNull TextView textViewTop3) {
    this.rootView = rootView;
    this.recyclerViewFood = recyclerViewFood;
    this.recyclerViewRate = recyclerViewRate;
    this.textViewHome1 = textViewHome1;
    this.textViewHome2 = textViewHome2;
    this.textViewHome3 = textViewHome3;
    this.textViewHome4 = textViewHome4;
    this.textViewTop3 = textViewTop3;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recyclerViewFood;
      RecyclerView recyclerViewFood = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewFood == null) {
        break missingId;
      }

      id = R.id.recyclerViewRate;
      RecyclerView recyclerViewRate = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewRate == null) {
        break missingId;
      }

      id = R.id.textViewHome1;
      TextView textViewHome1 = ViewBindings.findChildViewById(rootView, id);
      if (textViewHome1 == null) {
        break missingId;
      }

      id = R.id.textViewHome2;
      TextView textViewHome2 = ViewBindings.findChildViewById(rootView, id);
      if (textViewHome2 == null) {
        break missingId;
      }

      id = R.id.textViewHome3;
      TextView textViewHome3 = ViewBindings.findChildViewById(rootView, id);
      if (textViewHome3 == null) {
        break missingId;
      }

      id = R.id.textViewHome4;
      TextView textViewHome4 = ViewBindings.findChildViewById(rootView, id);
      if (textViewHome4 == null) {
        break missingId;
      }

      id = R.id.textViewTop3;
      TextView textViewTop3 = ViewBindings.findChildViewById(rootView, id);
      if (textViewTop3 == null) {
        break missingId;
      }

      return new FragmentHomeBinding((NestedScrollView) rootView, recyclerViewFood,
          recyclerViewRate, textViewHome1, textViewHome2, textViewHome3, textViewHome4,
          textViewTop3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
